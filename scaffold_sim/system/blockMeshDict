/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  10
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters   1.0;

x_min	 	0.51727e-3;
x_max		4.5398e-3;
y_min		0.291855e-3;
y_max		4.2972e-3;
z_min		1.6e-3; //1.68039;
z_max		3.45e-3; //3.30042;

center_x	#calc "($x_min + $x_max)/2";
center_y	#calc "($y_min + $y_max)/2";
radius 	#calc "($x_max - $x_min)/2";
offset		#calc "$radius - $radius*cos(degToRad(45))";

x_min 		#calc "$x_min + $offset";
x_max		#calc "$x_max - $offset";
y_min		#calc "$y_min + $offset";
y_max		#calc "$y_max - $offset";

mesh_size 	0.1e-3; //needs to match the base for case1
x_cells	#calc "std::floor(($x_max - $x_min)/$mesh_size)";
y_cells	#calc "std::floor(($y_max - $y_min)/$mesh_size)";
z_cells	#calc "std::floor(($z_max - $z_min)/$mesh_size)";

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

vertices
(
    ($x_min $y_min $z_min) // top block
    ($x_max $y_min $z_min)
    ($x_max $y_max $z_min)
    ($x_min $y_max $z_min)
    ($x_min $y_min $z_max)
    ($x_max $y_min $z_max)
    ($x_max $y_max $z_max)
    ($x_min $y_max $z_max)
    
);

blocks
(
    hex (0 1 2 3 4 5 6 7) ($x_cells $y_cells $z_cells) simpleGrading (1 1 1)
);

boundary
(

    walls
    {
        type wall;
        faces
        (
            (1 2 6 5)
            (2 3 7 6)
            (0 4 7 3)
            (0 1 5 4)
        );
    }

    inlet
    {
        type patch;
        faces
        (
            (4 5 6 7)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (0 3 2 1)
        );
    }

     
);





// ************************************************************************* //
